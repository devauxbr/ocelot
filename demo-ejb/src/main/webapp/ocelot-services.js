/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/.
 * Classes generated by Ocelot Framework.
 */
/**
 * Classe de test sur le pojoResolver
 * @author hhfrancois
 */
function TestPojoService() {
	this.ds = "demo.TestPojoService";

	/**
	 * @param i
	 * @return java.lang.String
	 */
	this.getMessage = function (i) {
		var op = "getMessage";
		var args = [i];
		var id = (this.ds + "." + op + "(" + JSON.stringify(args) + ")").hashCode();
		return getOcelotEvent.call(this, id, op, args);
	};

	/**
	 * @param i
	 * @return java.lang.String
	 */
	this.getMessage = function (i) {
		var op = "getMessage";
		var args = [i];
		var id = (this.ds + "." + op + "(" + JSON.stringify(args) + ")").hashCode();
		return getOcelotEvent.call(this, id, op, args);
	};
}
/**
 * Classe de test sur l'ejbResolver
 * @author hhfrancois
 */
function TestEJBService() {
	this.ds = "demo.TestEJBService";

	/**
	 * @param i
	 * @return java.lang.String
	 */
	this.getMessage = function (i) {
		var op = "getMessage";
		var args = [i];
		var id = (this.ds + "." + op + "(" + JSON.stringify(args) + ")").hashCode();
		return getOcelotEvent.call(this, id, op, args);
	};

	/**
	 * @param i
	 * @return java.lang.String
	 */
	this.getMessage = function (i) {
		var op = "getMessage";
		var args = [i];
		var id = (this.ds + "." + op + "(" + JSON.stringify(args) + ")").hashCode();
		return getOcelotEvent.call(this, id, op, args);
	};

	/**
	 * @return java.lang.String
	 */
	this.getMessageCached = function () {
		var op = "getMessageCached";
		var args = [];
		var id = (this.ds + "." + op + "(" + JSON.stringify(args) + ")").hashCode();
		return getOcelotEvent.call(this, id, op, args);
	};
}
